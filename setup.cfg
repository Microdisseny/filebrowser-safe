[metadata]
name = filebrowser_safe
version = attr: filebrowser_safe.__version__
description = A snapshot of the filebrowser_3 branch of django-filebrowser, packaged as a dependency for the Mezzanine CMS for Django.
long_description = file: README.rst
long_description_content_type = text/x-rst
author = Patrick Kranzlmueller, Axel Swoboda (vonautomatisch)
author_email = werkstaetten@vonautomatisch.at
maintainer = Stephen McDonald
maintainer_email = stephen.mc@gmail.com
url = http://github.com/stephenmcd/filebrowser-safe
license_file = LICENSE
classifiers =
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9

[options]
python_requires = >=3.6, <=3.9
packages = find:
include_package_data = true

[options.extras_require]
testing =
    pytest-django >= 3, <4
codestyle =
    flake8 >= 3, <4
    black==20.8b1

# Building

[bdist_wheel]
universal = 1

# Testing

[tox:tox]
envlist =
    py{36,37,38}-dj{22,30,31,master}
    flake8
    black
    package

[testenv]
# Run test suite
deps =
    .[testing]
    https://github.com/stephenmcd/mezzanine/archive/master.tar.gz#egg=mezzanine
    dj22: Django>=2.2, <3
    dj30: Django>=3.0, <3.1
    dj31: Django>=3.1, <3.2
    djmaster: https://github.com/django/django/archive/master.tar.gz#egg=Django
setenv =
    PYTHONPATH={toxinidir}
commands =
    pytest --basetemp="{envtmpdir}" --ignore filebrowser_safe-0.0.dev0 {posargs}

[testenv:py{36,37,38}-djmaster]
# Same as above, but ignoring the output while testing against Django master
ignore_outcome = true
deps =
    {[testenv]deps}
setenv =
    {[testenv]setenv}
commands =
    {[testenv]commands}

[tool:pytest]
DJANGO_SETTINGS_MODULE = tests.settings

[testenv:package]
# Check package integrity and compatibility with PyPI
deps =
    twine
    check-manifest
skip_install = true
commands =
    python setup.py -q sdist --dist-dir="{envtmpdir}/dist"
    twine check "{envtmpdir}/dist/*"
    check-manifest --ignore-bad-ideas '*.mo' {toxinidir}

[testenv:format]
# This env is not run by default. It's provided here for you
# to easily autoformat code by running `tox -e format`
skip_install = true
deps = .[codestyle]
commands = black .

[testenv:black]
# Lint with black
skip_install = true
deps = .[codestyle]
commands = black . --check

[testenv:flake8]
# Lint with flake8
skip_install = true
deps = .[codestyle]
commands = flake8 .

[flake8]
# Configured to match black
ignore =
    E203
    W503
    E731
max-line-length = 88
exclude =
    migrations
    .tox
    .git
    .eggs
    *.egg-info
    build
    dist

[gh-actions]
# Connect GitHub Action matrices with tox envs
python =
    3.6: py36
    3.7: py37
    3.8: py38, flake8, black, package
